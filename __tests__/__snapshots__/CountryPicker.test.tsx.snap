// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CountryPicker /> toMatchSnapshot 1`] = `
Array [
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "justifyContent": "flex-start",
          },
          Object {
            "marginTop": 0,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginRight": 10,
            "width": 30,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderWidth": 0.5,
              "fontSize": 30,
              "justifyContent": "center",
            }
          }
        >
          <Text
            allowFontScaling={false}
          >
            ðŸ‡ºðŸ‡¸
          </Text>
        </Text>
      </View>
    </View>
  </View>,
  <Modal
    animated={true}
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    visible={false}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "width": "15%",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/images/close.ios.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 25,
                    "resizeMode": "contain",
                    "width": 25,
                  },
                  undefined,
                  Object {
                    "tintColor": "#000000",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <RCTScrollView
          ItemSeparatorComponent={[Function]}
          automaticallyAdjustContentInsets={false}
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          getItemLayout={[Function]}
          horizontal={false}
          initialNumToRender={12}
          keyExtractor={[Function]}
          keyboardShouldPersistTaps="handled"
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          onScrollToIndexFailed={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={1}
          stickyHeaderIndices={Array []}
          testID="list-countries"
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
    </RCTSafeAreaView>
  </Modal>,
]
`;
